name: "Connector Release"

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Rust Connector'
        required: true
        type: choice
        options:
          - http
          - mqtt

jobs:
      
  build:
    uses: pinkforest/release-builder/.github/workflows/rust-builder.yml@main
    with:
      name: ${{ github.event.inputs.name }}

  docker-build:
    uses: pinkforest/release-builder/.github/workflows/docker-builder.yml@main
    needs: build
    with:
      name: ${{ github.event.inputs.name }}

  release:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      #############################################################
      # Build a clean source release artefact by:
      #
      # 1) Checkout the source from fluvio-connectors
      # 2) Figure out the to-be-released version from Cargo.toml
      # 3) Isolate the connector release source into a clean branch
      # 4) Roll the release from the 3) branch and include the built binary artifacts
      #
      - name: Checkout Connectors repository
        uses: actions/checkout@v2
        with:
          path: repo
          repository: infinyon/fluvio-connectors
      - name: Set TAG_VERSION for ${{ github.event.inputs.name }}
        shell: bash
        run: |
          echo "TAG_VERSION=`grep -m 1 -oP 'version\s*=\s*\"\K\d+\.\d+\.\d+(?=\")' repo/rust-connectors/sources/${{ github.event.inputs.name }}/Cargo.toml`" | tee -a $GITHUB_ENV
      - name: Print Environment
        run: |
          echo "TAG_VERSION = ${{ env.TAG_VERSION }}"
      - name: Tar
        run: |
          tar --directory=repo/rust-connectors/sources/${{ github.event.inputs.name }} -cvf release-src.tar ./
          mkdir connector-src; tar --directory=connector-src -xvf release-src.tar
      - name: Unlink Source Repo
        run: |
          rm -rf repo
      - name: Bring Release Base Repo
        uses: actions/checkout@v2
        with:
          path: fused
          repository: pinkforest/release-packager
      - name: Prepare Release Base Repo
        run: |
          cd fused/;find -not -path "./.git/*" -not -name ".git" -exec git rm -r {} +
      - name: Fuse Connector Source
        run: |
          cp -R ./connector-src/* ./fused/
      - name: Commit Fused Isolated Connector
        uses: EndBug/add-and-commit@v8
        with:
          author_name: Fluvio.io
          author_email: no_spam@fluvio.io
          message: 'Release'
          new_branch: fluvio-connect-${{ github.event.inputs.name }}-v${{ env.TAG_VERSION }}
          add: '.'
          cwd: './fused/'
      ###################################################
      # Pull all the previously built worflow artifacts
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          path: binaries
      - name: LS
        run: ls -laR ./
      #################################################################################################
      # Normalise Docker Tar artifacts into release artifacts in ./binaries without hardcoding triples
      # infinyon-fluvio-connector-http-aarch64-unknown-linux-musl.tar lives under same directory name
      - name: Normalise Docker tarball names for Release artifacts
        run: |
          cd binaries
          function rename_docker_tar() {
            DOCKER_PATH=$1
            mv "${DOCKER_PATH}" "${DOCKER_PATH}.tmp" ; mv "${DOCKER_PATH}.tmp/${DOCKER_PATH}" ./ ; rm -r "${DOCKER_PATH}.tmp"
          }
          export -f rename_docker_tar
          find . -type f -name infinyon-fluvio-connector-\*.tar -exec echo '{}' \; | grep -oP './\K.+(?=\/)' | xargs -d $'\n' bash -c 'for arg do rename_docker_tar "$arg"; done' _
      ###################################################################################################
      # Normalise Connector bartifacts into release artifacts in ./binaries without hardcoding triples
      # http-x86_64-unknown-linux-musl/http -> http-x86_64-unknown-linux-musl.bin
      - name: Normalise Connector binary names for Release artifacts
        run: |
          cd binaries
          export CNAME=${{ github.event.inputs.name }}
          find . -type f -name $CNAME -exec echo '{}' \; | grep -oP './\K.+(?=\/)' | xargs -d $'\n' sh -c 'for arg do mv "$arg/$CNAME" "$arg.bin"; rm -r "$arg"; done' _
      ###################################
      # Bundle the final release out
      #
      # - Connector release branch (via commit) is the clean isolated source
      # - ./binaries contain all the binaries
      #
      - name: Release 
        uses: ncipollo/release-action@v1
        id: create_release
        with:
          tag: connect-${{ github.event.inputs.name }}-${{ env.TAG_VERSION }}
          draft: false
          prerelease: false
          commit: fluvio-connect-${{ github.event.inputs.name }}-v${{ env.TAG_VERSION }}
          removeArtifacts: true
          artifacts: "./binaries/*"
          token: ${{ secrets.GITHUB_TOKEN }}